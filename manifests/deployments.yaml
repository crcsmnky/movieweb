#
# MOVIEWEB FRONTEND
#
apiVersion: v1
kind: Service
metadata:
  name: movieweb-frontend
  labels:
    app: movieweb-frontend
spec:
  ports:
  - port: 5000
    name: http-frontend
  selector:
    app: movieweb-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movieweb-frontend
  labels:
    app: movieweb-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movieweb-frontend
  template:
    metadata:
      labels:
        app: movieweb-frontend
        version: v1
    spec:
      containers:
      - name: movieweb-frontend
        image: gcr.io/clown-shoes-3000/movieweb-frontend:1.0
        imagePullPolicy: Always
        env:
        - name: API_HOST
          value: movieweb-backend
        ports:
        - containerPort: 5000
---
#
# MOVIEWEB BACKEND
#
apiVersion: v1
kind: Service
metadata:
  name: movieweb-backend
  labels:
    app: movieweb-backend
spec:
  ports:
  - port: 6000
    name: http-backend
  selector:
    app: movieweb-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movieweb-backend-mongodb
  labels:
    app: movieweb-backend
    version: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movieweb-backend
      version: mongodb
  template:
    metadata:
      labels:
        app: movieweb-backend
        version: mongodb
    spec:
      containers:
      - name: movieweb-backend-mongodb
        image: gcr.io/clown-shoes-3000/movieweb-backend-mongodb:1.0
        imagePullPolicy: Always
        env:
        - name: MONGODB_HOST
          value: mongodb-instance
        ports:
        - containerPort: 6000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movieweb-backend-firestore
  labels:
    app: movieweb-backend
    version: firestore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movieweb-backend
      version: firestore
  template:
    metadata:
      labels:
        app: movieweb-backend
        version: firestore
    spec:
      containers:
        - name: movieweb-backend-firestore
          image: gcr.io/clown-shoes-3000/movieweb-backend-firestore:1.0
          imagePullPolicy: Always
          ports:
          - containerPort: 6000
          volumeMounts:
            - name: cloudfirestore-credentials
              mountPath: /secrets/cloudfirestore
              readOnly: true
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/cloudfirestore/cloudfirestore-credentials.json
      volumes:
        - name: cloudfirestore-credentials
          secret:
            secretName: cloudfirestore-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movieweb-backend-cloudsql
  labels:
    app: movieweb-backend
    version: cloudsql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movieweb-backend
      version: cloudsql
  template:
    metadata:
      labels:
        app: movieweb-backend
        version: cloudsql
    spec:
      containers:
        - name: movieweb-backend-cloudsql
          image: gcr.io/clown-shoes-3000/movieweb-backend-cloudsql:1.0
          imagePullPolicy: Always
          ports:
          - containerPort: 6000
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "--instances=clown-shoes-3000:us-central1:movielens=tcp:3306",
                    "--credential_file=/secrets/cloudsql/cloudsql-credentials.json"]
          securityContext:
            runAsUser: 2
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-credentials
          secret:
            secretName: cloudsql-credentials
